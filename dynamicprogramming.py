# -*- coding: utf-8 -*-
"""DynamicProgramming.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O1arBz4g2qZRJMtN-bfV6Qmeu-Lz4Lkk
"""

# Dynamic Programming
def withdraw(denominations, withdraw_amount):

    dp = [float('inf')] * (withdraw_amount + 1)
    dp[0] = 0
    Paper_picks = [[] for _ in range(withdraw_amount + 1)]


    for Paper in denominations:

        for i in range(Paper, withdraw_amount + 1):
            if dp[i - Paper] + 1 < dp[i]:
                dp[i] = dp[i - Paper] + 1
                Paper_picks[i] = Paper_picks[i - Paper] + [Paper]


    return dp[withdraw_amount] if dp[withdraw_amount] != float('inf') else print("You can't withdraw that amount"), Paper_picks[withdraw_amount]

denominations = [5,10,20,50,100]

withdraw_amount = int(input("input the withdraw_amount : "))
min_denominations, Paper_picks = withdraw(denominations, withdraw_amount)
print("Minimum number of papers needed:", min_denominations)
print("denominations picked:", Paper_picks)